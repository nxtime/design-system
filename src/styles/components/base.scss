@import "../theme/default/colors.scss";
@import "../theme/default/spacing.scss";

$colorNames: primary, secondary, neutral, base-200, base-300, danger, warning, success,
  info, text-disabled;

@mixin set-color($color, $theme) {
  $theme-color: map-get($colors, $color);
  $colorState: "#{$color}-hover";
  $theme-color-hover: map-get($colors, $colorState);

  .#{$theme} .bg-#{$color} {
    --color: $theme-color;
    background-color: var(--color);
  }

  .#{$theme} .bg-transparent {
    background-color: transparent;
  }

  .#{$theme} .fill-#{$color} {
    --color: $theme-color;
    fill: var(--color) !important;

    &:hover {
      fill: color-mix(in srgb, var(--color), #fff 15%) !important;
    }
  }

  .#{$theme} .fill-transparent {
    fill: transparent !important;
  }

  .#{$theme} .ring {
    --color: $theme-color;
    box-shadow: 0px 0px 0px 2px var(--info) 0;

    &:focus {
      box-shadow: 0px 0px 0px 2px var(--info);
    }

    &-#{$color}:focus {
      box-shadow: 0px 0px 0px 2px var(--color);
    }
  }
}

@each $color in $colorNames {
  @include set-color($color, dark);
  @include set-color($color, light);

  .btn,
  .input {
    height: var(--spacing-xl);
    background-color: transparent;
    border-radius: var(--rounded-box);
    border: none;
    outline: none;
    padding-inline: var(--spacing-box);
    font-size: 0.9125rem;
    transition: all ease 0.2s;

    @include set-color($color, dark);
    @include set-color($color, light);

    &.btn-sm,
    &.input-sm {
      height: var(--spacing-lg);
    }

    &.btn-xs,
    &.input-xs {
      height: var(--spacing-sm);
    }

    &-ring {
      box-shadow: 0px 0px 0px 2px var(--info) 0;

      &:focus {
        box-shadow: 0px 0px 0px 2px var(--info);
      }

      @include set-color($color, dark);
      @include set-color($color, light);
    }
  }
}
